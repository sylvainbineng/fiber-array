# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10r3IVdaGmM34VdBGoj2ZcrrbcYGGx0aa
"""

# streamlit_app.py
import streamlit as st
import pandas as pd

# Set spreadsheet IDs and URLs
SPREADSHEET_ID = "16ngFtNv5SoHAOxJb6m59_k5iYSQqVwN6"
GID1 = 2003181009
GID2 = 1134201514

url1 = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/export?format=csv&gid={GID1}"
url2 = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/export?format=csv&gid={GID2}"

# Load data
x1 = pd.read_csv(url1)
y1 = pd.read_csv(url2)
x = x1.iloc[1:].copy()
y = y1.iloc[1:].copy()

# Fiber inventory SN cleanup
sn_in_inventory = y['SN'].dropna().astype(int).tolist()
y = y[y['SN'].isin(sn_in_inventory)]

# Filters UI
st.title("Fiber Inventory Filter")

# Wavelength
wavelength_option = st.selectbox("Choose Wavelength", ["", "780", "980", "1550", "780/1550/780"])
if wavelength_option:
    x = x[x['Wavelength'] == wavelength_option]

# Tip Type
tip_options = ["Cleaved", "Lensed", "Tapered/Spliced", "WAFT"]
selected_tips = st.multiselect("Choose Tip Type(s)", tip_options)
if selected_tips:
    x = x[x['Tip type'].isin(selected_tips)]

# Channel
channel_options = sorted(x['Channel'].dropna().unique().tolist())
selected_channels = st.multiselect("Choose Channel Count(s)", channel_options)
if selected_channels:
    x = x[x['Channel'].isin(selected_channels)]

# V-Groove Pitch
pitch_options = ["127", "250", "500"]
selected_pitch = st.selectbox("Select V-groove Pitch", [""] + pitch_options)
if selected_pitch:
    x = x[x['V-groove pitch'] == selected_pitch]

# Fiber Material
material_options = sorted(x['Fiber 1 material'].dropna().unique())
selected_material = st.selectbox("Select Fiber Material", [""] + material_options)
if selected_material:
    x = x[x['Fiber 1 material'] == selected_material]

# MFD
mfd_options = sorted(x['MFD'].dropna().unique())
selected_mfd = st.selectbox("Select MFD", [""] + mfd_options)
if selected_mfd:
    x = x[x['MFD'] == selected_mfd]

# Extract Serial Numbers from relevant columns
sn_columns = ['Serial numbers', 'SN2', 'SN3', 'SN4', 'SN5', 'SN6', 'SN7', 'SN8', 'SN9', 'SN10', 'SN11', 'SN12']
filtered_SN = []
for col in sn_columns:
    if col in x.columns:
        filtered_SN += x[col].dropna().astype(float).astype(int).tolist()

# Match SNs with inventory
match_list = list(set(sn_in_inventory).intersection(filtered_SN))
new_inv_table = y[y['SN'].isin(match_list)]

# Display results
st.subheader("Filtered Inventory")
st.dataframe(new_inv_table[['PN', 'SN', 'Box number']])

# Show count
count = len(new_inv_table)
st.success(f"{count} fiber{'s' if count != 1 else ''} found")