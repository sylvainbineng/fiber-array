# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10r3IVdaGmM34VdBGoj2ZcrrbcYGGx0aa
"""

# streamlit_app.py
import streamlit as st
import pandas as pd

# Set spreadsheet IDs and URLs
SPREADSHEET_ID = "16ngFtNv5SoHAOxJb6m59_k5iYSQqVwN6"
GID1 = 2003181009
GID2 = 1134201514

url1 = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/export?format=csv&gid={GID1}"
url2 = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/export?format=csv&gid={GID2}"

# Load data
x1 = pd.read_csv(url1)
y1 = pd.read_csv(url2)
x = x1.iloc[1:].copy()
y = y1.iloc[1:].copy()

# Fiber inventory SN cleanup
sn_in_inventory = y['SN'].dropna().astype(int).tolist()
y = y[y['SN'].isin(sn_in_inventory)]

# Filters UI
st.title("Q.ANT's Fiber Inventory Filter")

# Wavelength
wavelengths = ["780", "980", "1550", "780/1550/780"]
wavelength_option = st.multiselect("Choose Wavelength", wavelengths)
if wavelength_option:
    x = x[x['Wavelength'].isin(wavelength_option)]

# Tip Type
tip_options = ["Cleaved", "Lensed", "Tapered/Spliced", "WAFT"]
selected_tips = st.multiselect("Choose Tip Type(s)", tip_options)
if selected_tips:
    x = x[x['Tip type'].isin(selected_tips)]

# Channel
channel_options = list(range(41))
selected_channels = st.multiselect("Choose Channel Count(s)", channel_options)
if selected_channels:
    x = x[x['Channel'].isin(selected_channels)]

# V-Groove Pitch
pitch_options = ["127", "250", "500"]
selected_pitch = st.multiselect("Select V-groove Pitch",  pitch_options)
if selected_pitch:
    x = x[x['V-groove pitch'].isin(selected_pitch)]

# V-Groove tolerance
Tolerance_options =["+/-0.5","+/-100","+/-1.0","+/-0.6","+/-0.7","+/-0.8","+/-0.9","+/-0.10","+/-0.11","+/-0.12","+/-0.13","+/-0.14","+/-0.15","+/-0.16","/-0.3µm"]
selected_tolerance = st.multiselect("Select V-Groove tolerance", Tolerance_options)
if selected_tolerance:
    x=x[x['V-Groove tolerance'].isin(Tolerance_options)]

# Fiber 1 Material
material_options = ["10210030","10210038","HA15-PS-U25D","Nufern UHNA3 1550","Nufern UHNA3 980","Nufern UHNA7", "PM1016L", "PM15-U25D" ,"PM1550-XP", "PM2000D" ,"PM780-HP", "PM980-XP",  
"SMF-28 Ultra" ,"UHNA7, YOFC PM1016-T"]
selected_material = st.multiselect("Select Fiber 1 Material", material_options)
if selected_material:
    x = x[x['Fiber 1 material'] == selected_material]

# Fiber 2 Material
selected_material = st.multiselect("Select Fiber 2 Material", material_options)
if selected_material:
    x = x[x['Fiber 2 material'] == selected_material]

# MFD
mfd_options = [ "3.5 ± 0.3","1.9 - 3.6", "2.5 ± 0.3", "2.5 ± 0.5","3.2 ± 0.3","3.2 ± x.x","4.0 ± 0.3","4.1 ± 0.3","4.2 x 3.2","850: 5.3 ± 1.0","6.6 ± 0.5","10.1 ± 0.4", "10.4 ± 0.5","1060:10.5 ± 0.5", "1.5x1.5","3x3", "4.1x3.1","5x5"]
selected_mfd = st.multiselect("Select MFD",  mfd_options)
if selected_mfd:
    x = x[x['MFD'] == selected_mfd]

# Extract Serial Numbers from relevant columns
sn_columns = ['Serial numbers', 'SN2', 'SN3', 'SN4', 'SN5', 'SN6', 'SN7', 'SN8', 'SN9', 'SN10', 'SN11', 'SN12']
filtered_SN = []
for col in sn_columns:
    if col in x.columns:
       for el in x[col]:
           if type(el) in [int,float] and not pd.isna(el):
              filtered_SN.append(int(el))

# Match SNs with inventory
match_list = list(set(sn_in_inventory).intersection(filtered_SN))
new_inv_table = y[y['SN'].isin(match_list)]

# Display results
st.subheader("Available in Inventory")
st.dataframe(new_inv_table[['PN', 'SN', 'Box number']])

count = len(new_inv_table)
st.success(f"{count} fiber{'s' if count != 1 else 'nothing in inventory'} found")

st.subheader("Filtered table")
st.dataframe(x)
# Show count
count = len(new_inv_table)
st.success(f"{count} fiber{'s' if count != 1 else 'nothing in inventory'} found")
